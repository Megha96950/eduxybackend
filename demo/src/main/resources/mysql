 CREATE TABLE user_address(address_id int not null auto_increment,
    -> contact_number varchar(10) not null,
    -> line1 varchar(500) not null,
    -> line2 varchar(500),
    -> city varchar(50) not null,
    -> state varchar(50) not null,
    -> pin varchar(50) not null,
    -> user_email_id varchar(50),
    -> constraint ek_address_id_pk primary key (address_id));
    

create table student(student_id int not null auto_increment,
    -> subject_to_study varchar(200) not null,
    -> institute_name varchar(100) not null,
    -> id_proof varchar(50) not null,
    -> photo longblob not null,
    -> user_email_id varchar(50),
    -> constraint ek_student_id_pk primary key (student_id));
    
    
create table Teacher(teacher_id int not null auto_increment,
    -> subject_to_teach varchar(200) not null,
    -> description varchar(500) not null,
    -> higher_qualification varchar(100) not null,
    -> degree_photo longblob not null,
    -> id_proof varchar(50) not null,
    -> id_photo longblob not null,
    -> fees_per_student varchar(10) not null,
    -> user_email_id varchar(50),
    -> constraint ek_teacher_id_pk primary key (teacher_id));
    

drop table user;
create table user(
email_id  varchar(50) not null,
name varchar(30) not null,
password varchar(100) not null,
phone_number bigint not null,
role varchar(10),
constraint user_pk primary key (email_id)
);
drop table student;
create table student(student_id int not null auto_increment,
subject_to_study varchar(200) not null,
institute_name varchar(100) not null,
id_proof varchar(50) not null,
photo longblob ,
user_email_id varchar(50),
standard varchar(20),
mother_name varchar(20),
father_name varchar(20),
constraint ek_student_id_pk primary key (student_id));
 
 CREATE TABLE chatChannel (
  uuid VARCHAR(256) NOT NULL,
  userIdOne varchar(50) NOT NULL,
  userIdTwo varchar(50) NOT NULL,
  PRIMARY KEY (uuid),
  FOREIGN KEY (userIdOne) REFERENCES user(email_id),
  FOREIGN KEY (userIdTwo) REFERENCES user(email_id)
);

CREATE TABLE chatMessage (
  id INT NOT NULL AUTO_INCREMENT,
  authorUserId varchar(50) NOT NULL,
  recipientUserId varchar(50) NOT NULL,
  contents TEXT NOT NULL,
  timeSent TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  FOREIGN KEY (authorUserId) REFERENCES user(email_id),
  FOREIGN KEY (recipientUserId) REFERENCES user(email_id)
);
 
 